{%- import "components.html" as components -%}

<div id="{{host.name }}_diff_root">
  <div class="host-info">
    <h2><a href="/diff/{{ host.name }}">{{ host.name }}</a></h2>
    <button class="btn btn-secondary btn-sm mt-2 mb-4" hx-get="/diff/{{ host.name }}.htm?force_update=true"
      hx-swap="outerHTML" hx-target="#{{host.name }}_diff_root">Reload host</button>
    <table class="host-details">
      <tr>
        <th>Name</th>
        <td>{{ host.name }}</td>
      </tr>
      <tr>
        <th>Address</th>
        <td>{% call components::connection_details(host.address, host.port) %}</td>
      </tr>
    </table>
    {% let cached_from = diff.0 %}
    <h2>{{ format!("Cached result from {:.0} ago", time::OffsetDateTime::now_utc() - cached_from) }}</h2>
  </div>

  {% match diff.1 %}
  {% when Ok with (user_diff_list) %}
  {% if user_diff_list.is_empty() %}
  <div class="diff-status success">
    <i>âœ“ No differences found</i>
  </div>
  {% else %}
  <div class="user-diffs">
    {% for (login, readonly_condition, user_diff) in user_diff_list %}
    {% if !user_diff.is_empty() %}
    <div class="user-section">
      <h3>
        Login: {{ login }}
      </h3>
      {% match readonly_condition %}
      {% when Some with (condition) %}
      <h4>Keyfile is readonly: {{ condition }}</h4>
      {% when None %}
      <button class="inline-button" hx-swap="none" hx-post="/host/gen_authorized_keys" hx-vals='{
          "login": "{{ login }}"
        }'>Generate authorized_keys</button>
      {% endmatch %}
      <table class="diff-table">
        <thead>
          <tr>
            <th>Difference</th>
            <th>Details</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          {% for item in user_diff %}
          <tr>
            {% match item %}
            {% when crate::ssh::DiffItem::DuplicateKey with (key) %}
            <td>Duplicate key</td>
            <td>
              <details>
                <summary>
                  {% call components::maybe(key.comment, "Key has no comment") %}</summary>
                <hr>
                There are multiple copies of this key:
                {{ key.as_html()|safe }}
              </details>
            </td>
            <td></td>
            {% when crate::ssh::DiffItem::UnknownKey with (key) %}
            <td>Unknown key</td>
            <td>
              <details>
                <summary>
                  {% call components::maybe(key.comment, "Key has no comment") %}
                </summary>
                <hr>
                This key is not in the database:
                {{ key.as_html()|safe }}
              </details>
            </td>
            <td>
              <button hx-swap="none" hx-post="/user/add_key" hx-vals='{
            "key_type": "{{ key.algorithm }}",
            "key_base64": "{{ key.base64 }}"
            {% match key.comment %}
            {% when Some with (comment) %}
            ,"comment": "{{ comment }}"
            {% when None %}
            {% endmatch %}
            }'>Assign this key to a user</button>
            </td>
            {% when crate::ssh::DiffItem::KeyMissing with (key, username) %}
            <td>Missing key</td>
            <td>
              <details>
                <summary>
                  {% call components::maybe(key.comment, "Key has no comment") %}
                </summary>
                <hr>
                This key, owned by <a href="/user/{{ username }}">{{ username }}</a>, is missing:
                {{ key.as_html()|safe }}
              </details>
            </td>
            <td></td>
            {% when crate::ssh::DiffItem::UnauthorizedKey with (key, username) %}
            <td>Unauthorized key owned by <a href="/user/{{ username }}">{{ username }}</a></td>
            <td>
              <details>
                <summary>
                  {% call components::maybe(key.comment, "Key has no comment") %}
                </summary>
                <hr>
                This key, owned by <a href="/user/{{ username }}">{{ username }}</a>, is not authorized on this host:
                {{ key.as_html()|safe }}
              </details>
            </td>
            <td>
              <button hx-swap="none" hx-post="/authorization/add_dialog" hx-vals='{
          "username": "{{ username }}",
          "login": "{{ login }}",
          "options": "{{ key.options }}"
          }'>Authorize '{{username }}'</button>
            </td>
            {% when crate::ssh::DiffItem::FaultyKey with (error, entry) %}
            <td>Faulty line</td>
            <td>
              <details>
                <summary>
                  {{ error }}
                </summary>
                <hr>
                This line couldn't be parsed:
                <br>
                <code>{{ entry }}</code>
              </details>
            </td>
            <td></td>
            {% when crate::ssh::DiffItem::IncorrectOptions with (key, expected) %}
            <td>Incorrect Options</td>
            <td>
              <details>
                <summary>
                  {% call components::maybe(key.comment, "Key has no comment") %}
                </summary>
                <hr>
                Key options are incorrectly set.
                <br>
                <p>Expected:</p>
                <code>{{ expected }}</code>
                <br>
                <p>Got</p>
                <code>{{ key.options }}</code>
              </details>
            </td>
            <td>
              <button hx-swap="none" hx-post="/authorization/change_options" hx-vals='{
          "login": "{{ login }}",
          "options": "{{ key.options }}"
          }'>Update options</button>
            </td>
            {% when crate::ssh::DiffItem::PragmaMissing %}
            <td>Pragma missing</td>
            <td>
              <details>
                <summary>
                  This file is not managed by ssm
                </summary>
                <hr>
                The pragma is not in this file, suggesting that someone has edited it
                or it was never managed in the first place.
                <br>
              </details>
            </td>
            <td></td>
            {% endmatch %}
          </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>
    {% endif %}
    {% endfor %}
    {% endif %}
    {% when Err with (err) %}
    {% match err %}
    {% when crate::ssh::SshClientError::NoHostkey %}
    <div class="diff-status error">
      <i>No hostkey available.</i>
      <button hx-swap="none" hx-post="/host/{{ host.id }}/add_hostkey">Add a hostkey</button>
    </div>
    {% when crate::ssh::SshClientError::UnknownKey %}
    <div class="diff-status error">
      <i>Server presented unknown hostkey.</i>
      <button hx-swap="none" hx-post="/host/{{ host.id }}/add_hostkey">Update the hostkey</button>
    </div>
    {% else %}
    <div class="diff-status error">
      <i>Error: {{ err }}</i>
    </div>
    {% endmatch %}
    {% endmatch %}
  </div>
</div>
