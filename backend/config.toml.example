# SSH Key Manager Configuration Example
# Copy this file to config.toml and update with your actual values

# Database configuration
# SQLite database connection string
# For development, use a local SQLite file
# For production, consider using PostgreSQL or MySQL
database_url = "sqlite://ssm.db"

# Port for the web server to listen on
port = 8000

# Session configuration
# Generate a new session key for production using: openssl rand -hex 32
# This key is used to encrypt session cookies
session_key = "YOUR_SESSION_KEY_HERE_32_CHARACTERS_LONG"

# Log level: debug, info, warn, error
loglevel = "info"

# Path to htpasswd file for user authentication
# Create this file using: htpasswd -c .htpasswd username
htpasswd_path = ".htpasswd"

# Number of worker threads (NOTE: This is not currently used by the application)
# For development: 4
# For production: 16 or more depending on your server capacity
# workers = 4

[ssh]
# Path to your SSH private key for authenticating with managed hosts
# This should be an absolute path to your SSH private key
# Example: "/home/user/.ssh/id_rsa" or "C:\Users\user\.ssh\id_rsa"
private_key_file = "/path/to/your/ssh/private/key"

# Optional: private key passphrase if your key is encrypted
# Uncomment and set if your SSH key requires a passphrase
# private_key_passphrase = "your_passphrase_here"

# SSH connection timeout in seconds
timeout = 30

# NOTE: The sections below are not currently used by the application
# They are kept for documentation purposes

[security]
# CORS settings for web frontend
# In production, restrict this to your actual frontend domain
cors_origins = ["http://localhost:3000", "http://localhost:8080"]

# Rate limiting (requests per minute per IP)
rate_limit = 100

# Optional: Enable HTTPS redirect
# https_redirect = false

# Optional: Trusted proxy headers (if behind a reverse proxy)
# trusted_proxies = ["127.0.0.1", "::1"]
