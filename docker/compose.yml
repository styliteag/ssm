services:
  app:
    container_name: ssm-app
    build:
      context: ..
      dockerfile: docker/app/Dockerfile
      args:
        VITE_API_URL: http://localhost/api
    image: ssm:latest
    ports:
      - "80:80"
    volumes:      
      # Database persistence
      - ./data/db:/app/db
      # Configuration files config.toml and .htpasswd
      - ./data/config:/app/config
      - ./data/keys:/app/keys
      # Logs (optional)
      - ./data/logs:/app/logs
    environment:
      # Configuration file path (optional - server works without it)
      #- CONFIG=config/config.toml
      # Database connection string (takes precedence over config file default is sqlite://ssm.db)
      - DATABASE_URL=sqlite://./db/ssm.db
      # SSH private key file path (shows generation instructions if missing)
      # - SSH_KEY=keys/id_ssm
      # htpasswd file path (auto-created if missing with admin/random password)
      #- HTPASSWD=config/.htpasswd
      # Session key (leave unset for auto-generation)
      # - SESSION_KEY=your-secure-session-key-here
      # Logging level (overrides config file)
      #- RUST_LOG=info
    networks:
      - ssm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/app/health-check.sh"]
      start_period: 30s
      timeout: 10s
      interval: 30s
      retries: 3

  # Optional: SQLite Web-based database administration tool
  # Uncomment to enable database management interface
  #sqlite-web:
  #  container_name: ssm-sqlite-web
  #  image: coleifer/sqlite-web:latest
  #  ports:
  #    - "81:8080"
  #  volumes:
  #    - ./data/db:/data
  #  environment:
  #    SQLITE_DATABASE: /data/ssm.db
  #  networks:
  #    - ssm-network
  #  restart: unless-stopped
  #  healthcheck:
  #    test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
  #    timeout: 30s
  #    interval: 30s
  #    retries: 3

networks:
  ssm-network:
    driver: bridge