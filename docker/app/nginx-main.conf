events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Rate limit zones for different endpoint types
    limit_req_zone $binary_remote_addr zone=login:10m rate=20r/m;
    limit_req_zone $binary_remote_addr zone=ssh_ops:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api_read:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=api_write:10m rate=30r/s;
    
    # Map to determine rate limit zone based on request
    map $request_method$request_uri $rate_limit_zone {
        default "api_read";
        "~*POST|PUT|DELETE" "api_write";
        "~*logins|gen_authorized_keys|set_authorized_keys|sync" "ssh_ops";
    }
    
    # Log to stderr for container logging
    error_log /dev/stderr;
    access_log /dev/stdout;
    
    # Gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # HTTP server (redirect to HTTPS if SSL is enabled)
    server {
        listen 80;
        server_name localhost;
        
        # Redirect HTTP to HTTPS if SSL is enabled
        if ($ssl_enabled = "true") {
            return 301 https://$server_name$request_uri;
        }
        
        # Security headers for HTTP
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer" always;
        add_header Content-Security-Policy "default-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self'" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

        # Rate limit authentication endpoints more strictly
        location /api/auth/ {
            proxy_pass http://127.0.0.1:8080/api/auth/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Increase timeout for long-running operations if needed
            proxy_read_timeout 120s;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;

            # Apply login rate limiting
            limit_req zone=login burst=5 nodelay;
        }

        # Rate limit SSH-intensive operations (most restrictive)
        location ~ ^/api/(host|diff)/.*(logins|gen_authorized_keys|set_authorized_keys|sync) {
            proxy_pass http://127.0.0.1:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Long timeout for SSH operations
            proxy_read_timeout 300s;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;

            # Strict rate limiting for SSH operations
            limit_req zone=ssh_ops burst=3 nodelay;
        }

        # Proxy API requests to Rust backend with rate limiting
        location /api/ {
            proxy_pass http://127.0.0.1:8080/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Increase timeout for long-running SSH operations
            proxy_read_timeout 300s;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;

            # Dynamic rate limiting based on request type
            limit_req zone=$rate_limit_zone burst=20 nodelay;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://127.0.0.1:8080/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static assets from backend (CSS, JS, images)
        location /static/ {
            proxy_pass http://127.0.0.1:8080/static/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static backend assets
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Serve React frontend static files
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
    }
}
